import os
from flask import Flask, request
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler

# Variables d'environnement
BOT_TOKEN = os.getenv("8274151273:AAGLzb8UVZn7Jqd-49P8CG3CxSMFvlhGcTI")
PUBLIC_URL = os.getenv("https://bot-affiliation.onrender.com")

if not BOT_TOKEN or not PUBLIC_URL:
    raise ValueError("‚ö†Ô∏è BOT_TOKEN et PUBLIC_URL doivent √™tre d√©finis dans Render Environment Variables")

# Flask app
app = Flask(__name__)

# Plateformes et tutoriels d√©taill√©s
platforms = {
    "BoursoBank": (
        "https://bourso.com/affiliation",
        "üìã **Tuto BoursoBank :**\n"
        "1Ô∏è‚É£ Clique sur le lien ci-dessus.\n"
        "2Ô∏è‚É£ Remplis le formulaire d'ouverture de compte.\n"
        "3Ô∏è‚É£ Fournis tes justificatifs d'identit√© et de domicile.\n"
        "4Ô∏è‚É£ Effectue un premier versement (montant minimum indiqu√© sur le site).\n"
        "5Ô∏è‚É£ Ta prime sera cr√©dit√©e apr√®s validation du compte."
    ),
    "Revolut": (
        "https://revolut.com/referral",
        "üìã **Tuto Revolut :**\n"
        "1Ô∏è‚É£ Ouvre le lien et t√©l√©charge l'application.\n"
        "2Ô∏è‚É£ Cr√©e ton compte et valide ton identit√©.\n"
        "3Ô∏è‚É£ Commande ta carte bancaire gratuite.\n"
        "4Ô∏è‚É£ Effectue un paiement avec ta carte.\n"
        "5Ô∏è‚É£ Prime re√ßue sous 24h."
    ),
    "HelloBank": (
        "https://hellobank.fr/parrainage",
        "üìã **Tuto HelloBank :**\n"
        "1Ô∏è‚É£ Clique sur le lien.\n"
        "2Ô∏è‚É£ Remplis le formulaire d'inscription.\n"
        "3Ô∏è‚É£ Envoie tes justificatifs.\n"
        "4Ô∏è‚É£ Effectue un premier versement.\n"
        "5Ô∏è‚É£ Prime cr√©dit√©e apr√®s validation."
    ),
    "BankIn": (
        "https://bankin.com/parrainage",
        "üìã **Tuto BankIn :**\n"
        "1Ô∏è‚É£ T√©l√©charge l'application via le lien.\n"
        "2Ô∏è‚É£ Cr√©e ton compte.\n"
        "3Ô∏è‚É£ Connecte au moins un compte bancaire.\n"
        "4Ô∏è‚É£ Profite des fonctionnalit√©s premium offertes."
    ),
    "PayPal": (
        "https://paypal.com/referral",
        "üìã **Tuto PayPal :**\n"
        "1Ô∏è‚É£ Connecte-toi ou cr√©e un compte via le lien.\n"
        "2Ô∏è‚É£ Ajoute un compte bancaire ou une carte.\n"
        "3Ô∏è‚É£ Envoie ou re√ßois de l'argent pour activer la prime."
    ),
    "Cr√©dit Agricole": (
        "https://credit-agricole.fr/offre",
        "üìã **Tuto Cr√©dit Agricole :**\n"
        "1Ô∏è‚É£ Clique sur le lien et choisis ton agence.\n"
        "2Ô∏è‚É£ Ouvre un compte en ligne.\n"
        "3Ô∏è‚É£ D√©pose le montant minimum requis.\n"
        "4Ô∏è‚É£ Re√ßois ta prime."
    ),
    "Cr√©dit Lyonnais": (
        "https://lcl.fr/parrainage",
        "üìã **Tuto LCL :**\n"
        "1Ô∏è‚É£ Ouvre le lien et remplis le formulaire.\n"
        "2Ô∏è‚É£ Fournis tes justificatifs.\n"
        "3Ô∏è‚É£ Effectue ton premier versement.\n"
        "4Ô∏è‚É£ Prime cr√©dit√©e sous quelques jours."
    ),
    "Soci√©t√© G√©n√©rale": (
        "https://societegenerale.fr/parrainage",
        "üìã **Tuto Soci√©t√© G√©n√©rale :**\n"
        "1Ô∏è‚É£ Clique sur le lien et choisis ton offre.\n"
        "2Ô∏è‚É£ Ouvre ton compte.\n"
        "3Ô∏è‚É£ Fournis les pi√®ces justificatives.\n"
        "4Ô∏è‚É£ Prime vers√©e apr√®s validation."
    ),
    "BforBank": (
        "https://bforbank.com/parrainage",
        "üìã **Tuto BforBank :**\n"
        "1Ô∏è‚É£ Ouvre le lien.\n"
        "2Ô∏è‚É£ Cr√©e un compte avec tes informations.\n"
        "3Ô∏è‚É£ Envoie tes justificatifs.\n"
        "4Ô∏è‚É£ Effectue un d√©p√¥t initial.\n"
        "5Ô∏è‚É£ Prime vers√©e apr√®s activation."
    ),
    "N26": (
        "https://n26.com/referral",
        "üìã **Tuto N26 :**\n"
        "1Ô∏è‚É£ Clique sur le lien et t√©l√©charge l'application.\n"
        "2Ô∏è‚É£ Cr√©e un compte et valide ton identit√©.\n"
        "3Ô∏è‚É£ Commande ta carte.\n"
        "4Ô∏è‚É£ Effectue un paiement pour d√©clencher la prime."
    ),
    "Fortuneo": (
        "https://fortuneo.fr/parrainage",
        "üìã **Tuto Fortuneo :**\n"
        "1Ô∏è‚É£ Ouvre le lien et choisis ton type de compte.\n"
        "2Ô∏è‚É£ Remplis le formulaire d'inscription.\n"
        "3Ô∏è‚É£ Envoie tes justificatifs.\n"
        "4Ô∏è‚É£ Prime vers√©e apr√®s d√©p√¥t initial."
    ),
    "CoinBase": (
        "https://coinbase.com/join",
        "üìã **Tuto Coinbase :**\n"
        "1Ô∏è‚É£ Inscris-toi via le lien.\n"
        "2Ô∏è‚É£ V√©rifie ton identit√©.\n"
        "3Ô∏è‚É£ Ach√®te ou vends l'√©quivalent de 100‚Ç¨ en crypto.\n"
        "4Ô∏è‚É£ Prime cr√©dit√©e automatiquement."
    ),
    "Kraken": (
        "https://kraken.com/referral",
        "üìã **Tuto Kraken :**\n"
        "1Ô∏è‚É£ Clique sur le lien.\n"
        "2Ô∏è‚É£ Cr√©e un compte et valide ton identit√©.\n"
        "3Ô∏è‚É£ D√©pose un montant minimum.\n"
        "4Ô∏è‚É£ Prime vers√©e apr√®s ton premier trade."
    ),
    "Deblock": (
        "https://deblock.com/parrainage",
        "üìã **Tuto Deblock :**\n"
        "1Ô∏è‚É£ Ouvre le lien.\n"
        "2Ô∏è‚É£ Cr√©e un compte et valide ton email.\n"
        "3Ô∏è‚É£ Active ton profil.\n"
        "4Ô∏è‚É£ Prime re√ßue apr√®s ton premier transfert."
    ),
    "Robinhood": (
        "https://robinhood.com/referral",
        "üìã **Tuto Robinhood :**\n"
        "1Ô∏è‚É£ Ouvre le lien.\n"
        "2Ô∏è‚É£ Cr√©e un compte.\n"
        "3Ô∏è‚É£ D√©pose des fonds.\n"
        "4Ô∏è‚É£ Re√ßois des actions gratuites."
    )
}

# Bot
application = Application.builder().token(BOT_TOKEN).build()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton(name, callback_data=name)] for name in platforms.keys()]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("üëã Bienvenue ! Choisis une plateforme pour voir le lien et le tutoriel :", reply_markup=reply_markup)

async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    name = query.data
    link, tuto = platforms[name]
    await query.edit_message_text(f"üîó **Lien :** {link}\n\n{tuto}", parse_mode="Markdown")

application.add_handler(CommandHandler("start", start))
application.add_handler(CallbackQueryHandler(button_click))

@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), application.bot)
    application.update_queue.put(update)
    return "OK", 200

@app.route("/", methods=["GET"])
def home():
    return "Bot is running!", 200

@app.before_first_request
def set_webhook():
    webhook_url = f"{PUBLIC_URL}/{BOT_TOKEN}"
    application.bot.set_webhook(url=webhook_url)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
